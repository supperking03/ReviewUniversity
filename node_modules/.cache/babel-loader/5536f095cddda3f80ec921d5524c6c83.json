{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _asyncToGenerator from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kienngo/Documents/Zalo/ReviewUniversity/src/screens/UniversityDetail/components/Dialog/PostDialog.js\";\n\n/* eslint-disable no-undef */\n\n/* eslint-disable no-alert */\n\n/* eslint-disable react/no-find-dom-node */\nimport * as React from 'react';\nimport $ from 'jquery';\nimport ReactDOM from 'react-dom';\nimport Recaptcha from 'react-recaptcha';\nimport './css/PostDialog.css';\nimport APIModel from '../../../../api/APIModel';\nvar captchaKeyApi = '6LeR_JkUAAAAAGErmsKDv410V24gf5bHBHfeyfug';\nvar Roles = {\n  student: 'Học sinh',\n  employee: 'Cán bộ trường',\n  others: 'Người ngoài'\n};\nvar Types = {\n  Review: {\n    like: 'Khen',\n    dislike: 'Chê',\n    others: 'Góp ý'\n  },\n  Reply: {\n    like: 'Tán thành',\n    dislike: 'Phản bác',\n    others: 'Trung lập'\n  }\n};\nvar dialogDisplayType = {\n  Review: 'Nhận Xét',\n  Reply: 'Trả lời'\n};\n\nvar ReviewPostDialog =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ReviewPostDialog, _React$Component);\n\n  function ReviewPostDialog(props) {\n    var _this;\n\n    _classCallCheck(this, ReviewPostDialog);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ReviewPostDialog).call(this, props));\n\n    _this.callback = function () {\n      _this.setState({\n        captchaChecked: true\n      });\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$state, role, type, content, captchaChecked, _this$props, universityId, reviewId, dialogType, id, data, result;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _this$state = _this.state, role = _this$state.role, type = _this$state.type, content = _this$state.content, captchaChecked = _this$state.captchaChecked;\n              _this$props = _this.props, universityId = _this$props.universityId, reviewId = _this$props.reviewId, dialogType = _this$props.dialogType;\n              id = dialogType === 'Review' ? {\n                universityId: universityId\n              } : {\n                reviewId: reviewId\n              };\n              data = _objectSpread({}, id, {\n                role: role,\n                type: type,\n                context: content\n              });\n\n              if (!(!captchaChecked || content.length < 15)) {\n                _context.next = 7;\n                break;\n              }\n\n              alert('Vui lòng kiểm tra lại nội dung nhập có đủ tối thiểu 15 chữ hay chưa');\n              return _context.abrupt(\"return\");\n\n            case 7:\n              if (!(dialogType === 'Review')) {\n                _context.next = 13;\n                break;\n              }\n\n              _context.next = 10;\n              return APIModel.postReview(data);\n\n            case 10:\n              result = _context.sent;\n              _context.next = 16;\n              break;\n\n            case 13:\n              _context.next = 15;\n              return APIModel.postReply(data);\n\n            case 15:\n              result = _context.sent;\n\n            case 16:\n              if (result !== true) {\n                alert(result);\n              }\n\n              document.getElementById('btnClose').click();\n\n            case 18:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    _this.renderContent = function () {\n      var dialogType = _this.props.dialogType;\n      var _this$state2 = _this.state,\n          role = _this$state2.role,\n          type = _this$state2.type;\n      return React.createElement(\"form\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"Vai tr\\xF2\"), React.createElement(\"div\", {\n        className: \"CustomDropDown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"dropdown-toggle btn-secondary btn\",\n        value: role,\n        onChange: function onChange(e) {\n          _this.setState({\n            role: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \" \", role || 'Vai trò của bạn'), Object.keys(Roles).map(function (key) {\n        return React.createElement(\"option\", {\n          className: \"dropdown-item\",\n          value: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107\n          },\n          __self: this\n        }, Roles[key]);\n      })))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, \"\\u0110\\xE1nh gi\\xE1\"), React.createElement(\"div\", {\n        className: \"CustomDropDown\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        className: \"dropdown-toggle btn-secondary btn\",\n        value: type,\n        onChange: function onChange(e) {\n          _this.setState({\n            type: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \" \", role || 'Đánh giá của bạn'), Object.keys(Types[dialogType]).map(function (key) {\n        return React.createElement(\"option\", {\n          className: \"dropdown-item\",\n          value: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, Types[dialogType][key]);\n      })))), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"N\\u1ED9i dung (*)\"), React.createElement(\"textarea\", {\n        type: \"text\",\n        className: \"w-100\",\n        placeholder: \"Nh\\u1EADn x\\xE9t \\u0111i...\",\n        rows: 5,\n        required: true,\n        onChange: function onChange(e) {\n          _this.setState({\n            content: e.target.value\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      })));\n    };\n\n    _this.state = {\n      role: 'others',\n      type: 'others',\n      content: '',\n      captchaChecked: false\n    };\n    return _this;\n  }\n\n  _createClass(ReviewPostDialog, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var onClose = this.props.onClose;\n      $(ReactDOM.findDOMNode(this)).modal('show');\n      $(ReactDOM.findDOMNode(this)).on('hidden.bs.modal', onClose);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props2 = this.props,\n          onClose = _this$props2.onClose,\n          dialogType = _this$props2.dialogType,\n          context = _this$props2.context;\n      return React.createElement(\"div\", {\n        className: \"modal fade\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-dialog\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"modal-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, context && React.createElement(\"div\", {\n        className: \"alert alert-info contentReview\",\n        role: \"alert\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, context), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        \"aria-hidden\": \"true\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"\\xD7\"))), React.createElement(\"div\", {\n        className: \"modal-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, this.renderContent(), React.createElement(Recaptcha, {\n        ref: function ref(e) {\n          return _this2.recaptchaInstance = e;\n        },\n        size: \"normal\",\n        sitekey: captchaKeyApi,\n        verifyCallback: this.callback,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"modal-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        id: \"btnClose\",\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        \"data-dismiss\": \"modal\",\n        onClick: onClose,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      }, \"\\u0110\\xF3ng\"), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-primary\",\n        onClick: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, dialogDisplayType[dialogType] || 'Đăng')))));\n    }\n  }]);\n\n  return ReviewPostDialog;\n}(React.Component);\n\nexport default ReviewPostDialog;","map":{"version":3,"sources":["/Users/kienngo/Documents/Zalo/ReviewUniversity/src/screens/UniversityDetail/components/Dialog/PostDialog.js"],"names":["React","$","ReactDOM","Recaptcha","APIModel","captchaKeyApi","Roles","student","employee","others","Types","Review","like","dislike","Reply","dialogDisplayType","ReviewPostDialog","props","callback","setState","captchaChecked","onSubmit","state","role","type","content","universityId","reviewId","dialogType","id","data","context","length","alert","postReview","result","postReply","document","getElementById","click","renderContent","e","target","value","Object","keys","map","key","onClose","findDOMNode","modal","on","recaptchaInstance","Component"],"mappings":"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","sourcesContent":["/* eslint-disable no-undef */\n/* eslint-disable no-alert */\n/* eslint-disable react/no-find-dom-node */\nimport * as React from 'react';\nimport $ from 'jquery';\nimport ReactDOM from 'react-dom';\nimport Recaptcha from 'react-recaptcha';\nimport './css/PostDialog.css';\nimport APIModel from '../../../../api/APIModel';\n\nconst captchaKeyApi = '6LeR_JkUAAAAAGErmsKDv410V24gf5bHBHfeyfug';\n\nconst Roles = {\n  student: 'Học sinh',\n  employee: 'Cán bộ trường',\n  others: 'Người ngoài'\n};\n\nconst Types = {\n  Review: {\n    like: 'Khen',\n    dislike: 'Chê',\n    others: 'Góp ý'\n  },\n  Reply: {\n    like: 'Tán thành',\n    dislike: 'Phản bác',\n    others: 'Trung lập'\n  }\n};\n\nconst dialogDisplayType = {\n  Review: 'Nhận Xét',\n  Reply: 'Trả lời'\n};\n\nclass ReviewPostDialog extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      role: 'others',\n      type: 'others',\n      content: '',\n      captchaChecked: false\n    };\n  }\n\n  componentDidMount() {\n    const { onClose } = this.props;\n    $(ReactDOM.findDOMNode(this)).modal('show');\n    $(ReactDOM.findDOMNode(this)).on('hidden.bs.modal', onClose);\n  }\n\n  callback = () => {\n    this.setState({ captchaChecked: true });\n  };\n\n  onSubmit = async () => {\n    const { role, type, content, captchaChecked } = this.state;\n    const { universityId, reviewId, dialogType } = this.props;\n\n    const id = dialogType === 'Review' ? { universityId } : { reviewId };\n\n    const data = {\n      ...id,\n      role,\n      type,\n      context: content\n    };\n    if (!captchaChecked || content.length < 15) {\n      alert('Vui lòng kiểm tra lại nội dung nhập có đủ tối thiểu 15 chữ hay chưa');\n      return;\n    }\n\n    let result;\n    if (dialogType === 'Review')\n    {\n      result =  await APIModel.postReview(data);\n    }\n    else result = await APIModel.postReply(data);\n\n    if(result !== true)\n    {\n       alert(result);\n    }\n    document.getElementById('btnClose').click();\n\n  };\n\n  renderContent = () => {\n    const { dialogType } = this.props;\n    const { role, type } = this.state;\n    return (\n      <form>\n        <div className=\"form-group\">\n          <p>Vai trò</p>\n          <div className=\"CustomDropDown\">\n            <select\n              className=\"dropdown-toggle btn-secondary btn\"\n              value={role}\n              onChange={(e) => {\n                this.setState({ role: e.target.value });\n              }}\n            >\n              <p> {role || 'Vai trò của bạn'}</p>\n              {Object.keys(Roles).map((key) => (\n                <option className=\"dropdown-item\" value={key}>\n                  {Roles[key]}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <p>Đánh giá</p>\n          <div className=\"CustomDropDown\">\n            <select\n              className=\"dropdown-toggle btn-secondary btn\"\n              value={type}\n              onChange={(e) => {\n                this.setState({ type: e.target.value });\n              }}\n            >\n              <p> {role || 'Đánh giá của bạn'}</p>\n              {Object.keys(Types[dialogType]).map((key) => (\n                <option className=\"dropdown-item\" value={key}>\n                  {Types[dialogType][key]}\n                </option>\n              ))}\n            </select>\n          </div>\n        </div>\n        <div className=\"form-group\">\n          <p>Nội dung (*)</p>\n          <textarea\n            type=\"text\"\n            className=\"w-100\"\n            placeholder=\"Nhận xét đi...\"\n            rows={5}\n            required\n            onChange={(e) => {\n              this.setState({ content: e.target.value });\n            }}\n          />\n        </div>\n      </form>\n    );\n  };\n\n  render() {\n    const { onClose, dialogType, context } = this.props;\n    return (\n      <div className=\"modal fade\">\n        <div className=\"modal-dialog\">\n          <div className=\"modal-content\">\n            <div className=\"modal-header\">\n              {context && (\n                <div className=\"alert alert-info contentReview\" role=\"alert\">\n                  {context}\n                </div>\n              )}\n              <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\" onClick={onClose}>\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n            <div className=\"modal-body\">\n              {this.renderContent()}\n              <Recaptcha\n                ref={(e) => (this.recaptchaInstance = e)}\n                size=\"normal\"\n                sitekey={captchaKeyApi}\n                verifyCallback={this.callback}\n              />\n            </div>\n            <div className=\"modal-footer\">\n              <button id=\"btnClose\" type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\" onClick={onClose}>\n                Đóng\n              </button>\n              <button type=\"button\" className=\"btn btn-primary\" onClick={this.onSubmit}>\n                {dialogDisplayType[dialogType] || 'Đăng'}\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReviewPostDialog;\n"]},"metadata":{},"sourceType":"module"}