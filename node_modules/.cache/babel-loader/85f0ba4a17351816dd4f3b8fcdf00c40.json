{"ast":null,"code":"import _classCallCheck from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/kienngo/Documents/Zalo/ReviewUniversity/src/screens/Home/components/AutoCompleteTextInput.js\";\nimport * as React from 'react';\nimport './css/AutoCompleteTextInput.css';\n\nvar Autocomplete =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Autocomplete, _React$Component);\n\n  function Autocomplete(props) {\n    var _this;\n\n    _classCallCheck(this, Autocomplete);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Autocomplete).call(this, props));\n\n    _this.onChange = function (e) {\n      var suggestions = _this.props.suggestions;\n      var value = e.currentTarget.value;\n      var newValue = value;\n      var filteredSuggestions = suggestions.filter(function (suggestion) {\n        return suggestion.name.toLowerCase().indexOf(newValue.toLowerCase()) > -1;\n      });\n\n      _this.setState({\n        activeSuggestion: 0,\n        filteredSuggestions: filteredSuggestions,\n        showSuggestions: true,\n        value: newValue\n      });\n    };\n\n    _this.onKeyDown = function (e) {\n      var _this$state = _this.state,\n          activeSuggestion = _this$state.activeSuggestion,\n          filteredSuggestions = _this$state.filteredSuggestions;\n      var universities = filteredSuggestions.map(function (u) {\n        return u.name;\n      });\n\n      if (e.keyCode === 13) {\n        _this.setState({\n          showSuggestions: false,\n          value: universities[activeSuggestion]\n        });\n      }\n    };\n\n    _this.onBlur = function () {\n      setTimeout(function () {\n        _this.setState({\n          showSuggestions: false\n        });\n      }, 250);\n    };\n\n    _this.renderSuggestionList = function () {\n      var _this$state2 = _this.state,\n          filteredSuggestions = _this$state2.filteredSuggestions,\n          showSuggestions = _this$state2.showSuggestions,\n          value = _this$state2.value;\n\n      if (showSuggestions && value) {\n        if (filteredSuggestions.length) {\n          return React.createElement(\"ul\", {\n            id: \"menu\",\n            className: \"suggestions\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, filteredSuggestions.map(function (suggestion) {\n            return React.createElement(\"li\", {\n              key: suggestion.id,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 60\n              },\n              __self: this\n            }, React.createElement(\"a\", {\n              href: \"/university/\".concat(suggestion.id),\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 61\n              },\n              __self: this\n            }, suggestion.name));\n          }));\n        }\n\n        return React.createElement(\"div\", {\n          className: \"no-suggestions w-100 p-0 m-0\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Kh\\xF4ng c\\xF3 k\\u1EBFt qu\\u1EA3 !!\"));\n      }\n\n      return null;\n    };\n\n    _this.state = {\n      filteredSuggestions: [],\n      showSuggestions: false,\n      value: ''\n    };\n    return _this;\n  }\n\n  _createClass(Autocomplete, [{\n    key: \"render\",\n    value: function render() {\n      var onChange = this.onChange,\n          onKeyDown = this.onKeyDown;\n      var value = this.state.value;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"h-100\",\n        style: {\n          overflow: 'visible',\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row m-0\",\n        style: {\n          flex: 1\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        className: \"glyphicon glyphicon-search\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"text\",\n        onBlur: this.onBlur,\n        className: \"form-control border-0 pl-3 auto-complete-input\",\n        placeholder: \"T\\xECm theo t\\xEAn tr\\u01B0\\u1EDDng \\u0111\\u1EA1i h\\u1ECDc / cao \\u0111\\u1EB3ng\",\n        \"aria-label\": \"T\\xECm theo t\\xEAn tr\\u01B0\\u1EDDng \\u0111\\u1EA1i h\\u1ECDc / cao \\u0111\\u1EB3ng\",\n        \"aria-describedby\": \"button-addon2\",\n        onChange: onChange,\n        onKeyDown: onKeyDown,\n        value: value,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), this.renderSuggestionList())));\n    }\n  }]);\n\n  return Autocomplete;\n}(React.Component);\n\nexport default Autocomplete;","map":{"version":3,"sources":["/Users/kienngo/Documents/Zalo/ReviewUniversity/src/screens/Home/components/AutoCompleteTextInput.js"],"names":["React","Autocomplete","props","onChange","e","suggestions","value","currentTarget","newValue","filteredSuggestions","filter","suggestion","name","toLowerCase","indexOf","setState","activeSuggestion","showSuggestions","onKeyDown","state","universities","map","u","keyCode","onBlur","setTimeout","renderSuggestionList","length","id","overflow","flex","Component"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport './css/AutoCompleteTextInput.css';\n\nclass Autocomplete extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filteredSuggestions: [],\n      showSuggestions: false,\n      value: ''\n    };\n  }\n\n  onChange = (e) => {\n    const { suggestions } = this.props;\n    const {\n      currentTarget: { value }\n    } = e;\n    const newValue = value;\n\n    const filteredSuggestions = suggestions.filter(\n      (suggestion) => suggestion.name.toLowerCase().indexOf(newValue.toLowerCase()) > -1\n    );\n\n    this.setState({\n      activeSuggestion: 0,\n      filteredSuggestions,\n      showSuggestions: true,\n      value: newValue\n    });\n  };\n\n  onKeyDown = (e) => {\n    const { activeSuggestion, filteredSuggestions } = this.state;\n    const universities = filteredSuggestions.map((u) => u.name);\n    if (e.keyCode === 13) {\n      this.setState({\n        showSuggestions: false,\n        value: universities[activeSuggestion]\n      });\n    }\n  };\n\n  onBlur = () => {\n    setTimeout(() => {\n      this.setState({ showSuggestions: false });\n    }, 250);\n  };\n\n  renderSuggestionList = () => {\n    const { filteredSuggestions, showSuggestions, value } = this.state;\n\n    if (showSuggestions && value) {\n      if (filteredSuggestions.length) {\n        return (\n          <ul id=\"menu\" className=\"suggestions\">\n            {filteredSuggestions.map((suggestion) => {\n              return (\n                <li key={suggestion.id}>\n                  <a href={`/university/${suggestion.id}`}>{suggestion.name}</a>\n                </li>\n              );\n            })}\n          </ul>\n        );\n      }\n      return (\n        <div className=\"no-suggestions w-100 p-0 m-0\">\n          <em>Không có kết quả !!</em>\n        </div>\n      );\n    }\n    return null;\n  };\n\n  render() {\n    const { onChange, onKeyDown } = this;\n    const { value } = this.state;\n    return (\n      <React.Fragment>\n        <div className=\"h-100\" style={{ overflow: 'visible', flex: 1 }}>\n          <div className=\"row m-0\" style={{ flex: 1 }}>\n            <span className=\"glyphicon glyphicon-search\" />\n            <input\n              type=\"text\"\n              onBlur={this.onBlur}\n              className=\"form-control border-0 pl-3 auto-complete-input\"\n              placeholder=\"Tìm theo tên trường đại học / cao đẳng\"\n              aria-label=\"Tìm theo tên trường đại học / cao đẳng\"\n              aria-describedby=\"button-addon2\"\n              onChange={onChange}\n              onKeyDown={onKeyDown}\n              value={value}\n            />\n            {this.renderSuggestionList()}\n          </div>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Autocomplete;\n"]},"metadata":{},"sourceType":"module"}