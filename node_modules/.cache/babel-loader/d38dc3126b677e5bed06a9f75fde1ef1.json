{"ast":null,"code":"import _regeneratorRuntime from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/kienngo/Documents/Zalo/ReviewUniversity/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport apiUrl from './config';\n\nvar APIModel = function APIModel() {\n  _classCallCheck(this, APIModel);\n\n  this.getUniversities =\n  /*#__PURE__*/\n  function () {\n    var _ref = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee(id) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", fetch(\"\".concat(apiUrl, \"Universities\").concat(id ? \"/\".concat(id) : '')).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return data;\n              }).catch(function (error) {\n                console.log('error', error);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  this.getReply =\n  /*#__PURE__*/\n  function () {\n    var _ref2 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2(id) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", fetch(\"\".concat(apiUrl, \"Reviews\").concat(id ? \"/\".concat(id) : '')).then(function (response) {\n                return response.json();\n              }).then(function (data) {\n                return data;\n              }).catch(function (error) {\n                console.log('error', error);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  this.getRecentReviews =\n  /*#__PURE__*/\n  _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee3() {\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            return _context3.abrupt(\"return\", fetch(\"\".concat(apiUrl, \"Reviews/newest\")).then(function (response) {\n              return response.json();\n            }).then(function (data) {\n              return data;\n            }).catch(function (error) {\n              console.log('error', error);\n            }));\n\n          case 1:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  this.postReview =\n  /*#__PURE__*/\n  function () {\n    var _ref4 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4(reviewData) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              return _context4.abrupt(\"return\", fetch(\"\".concat(apiUrl, \"Reviews\"), {\n                method: 'post',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(reviewData)\n              }).then(function (response) {\n                return response.json();\n              }).then(function (response) {\n                if (response.id) return true;\n                return response.Context.toString().replace(',', '\\n');\n              }));\n\n            case 1:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x3) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  this.postReply =\n  /*#__PURE__*/\n  function () {\n    var _ref5 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(replyData) {\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              return _context5.abrupt(\"return\", fetch(\"\".concat(apiUrl, \"Replies\"), {\n                method: 'post',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(replyData)\n              }).then(function (response) {\n                return response.json();\n              }).then(function (response) {\n                if (response.id) return true;\n                return response.Context.toString().replace(',', '\\n');\n              }));\n\n            case 1:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x4) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  this.postUniversity =\n  /*#__PURE__*/\n  function () {\n    var _ref6 = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(universityData) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              return _context6.abrupt(\"return\", fetch(\"\".concat(apiUrl, \"Universities\"), {\n                method: 'post',\n                headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(universityData)\n              }).then(function (response) {\n                return response.json();\n              }).then(function (response) {\n                if (response.id) return true;\n                return response.Context.toString().replace(',', '\\n');\n              }));\n\n            case 1:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x5) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\n\nvar apiModel = new APIModel();\nexport default apiModel;","map":{"version":3,"sources":["/Users/kienngo/Documents/Zalo/ReviewUniversity/src/api/APIModel.js"],"names":["apiUrl","APIModel","getUniversities","id","fetch","then","response","json","data","catch","error","console","log","getReply","getRecentReviews","postReview","reviewData","method","headers","Accept","body","JSON","stringify","Context","toString","replace","postReply","replyData","postUniversity","universityData","apiModel"],"mappings":"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","sourcesContent":["import apiUrl from './config';\n\nclass APIModel {\n  getUniversities = async id => {\n    // eslint-disable-next-line no-undef\n    return fetch(`${apiUrl}Universities${id ? `/${id}` : ''}`)\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        console.log('error', error);\n      });\n  };\n\n  getReply = async id => {\n    // eslint-disable-next-line no-undef\n    return fetch(`${apiUrl}Reviews${id ? `/${id}` : ''}`)\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        console.log('error', error);\n      });\n  };\n\n  getRecentReviews = async () => {\n    // eslint-disable-next-line no-undef\n    return fetch(`${apiUrl}Reviews/newest`)\n      .then(response => response.json())\n      .then(data => {\n        return data;\n      })\n      .catch(error => {\n        console.log('error', error);\n      });\n  };\n\n  postReview = async reviewData => {\n    // eslint-disable-next-line no-undef\n    return fetch(`${apiUrl}Reviews`, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(reviewData)\n    }).then(response => {\n      return response.json();\n    }).then(response=>{\n      if(response.id)\n        return true;\n      return response.Context.toString().replace(',','\\n');\n    });\n  };\n\n  postReply = async replyData => {\n    // eslint-disable-next-line no-undef\n    return fetch(`${apiUrl}Replies`, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(replyData)\n    }).then(response => {\n      return response.json();\n    }).then(response=>{\n        if(response.id)\n            return true;\n        return response.Context.toString().replace(',','\\n');\n    });\n  };\n\n  postUniversity = async universityData => {\n    // eslint-disable-next-line no-undef\n    return fetch(`${apiUrl}Universities`, {\n      method: 'post',\n      headers: {\n        Accept: 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(universityData)\n    }).then(response => {\n      return response.json();\n    }).then(response=>{\n        if(response.id)\n            return true;\n        return response.Context.toString().replace(',','\\n');\n    });\n  };\n}\n\nconst apiModel = new APIModel();\n\nexport default apiModel;\n"]},"metadata":{},"sourceType":"module"}